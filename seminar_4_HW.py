# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются
# в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы
# множеств.


# from random import randint
# n = int(input("введи n "))
# m = int(input("введи m "))
# SetN = set()
# SetM = set()
# for i in range(n):
#     #while len(SetN) < n:
#         SetN.add(randint(1,30))
# for i in range(m):
#     #while len(SetM) < m:    
#         SetM.add(randint(1,30))  
# result = SetN.intersection(SetM)
# print(f" Множество N {SetN}, Множество M {SetM} ")
# if result == set():
#     print(" нет пересечений")
# else:    
#     print(f" пересечения: {result}")       


# n = int(input("введи n "))
# m = int(input("введи m "))
# SetN = set()
# SetM = set()
# for i in range(n):
#     while len(SetN) < n:
#         SetN.add(int(input("введи число множества N: ")))
# print()        
# for i in range(m):
#     while len(SetM) < m:    
#         SetM.add(int(input("введи число множества M: ")))  
# result = SetN.intersection(SetM)
# print(f" Множество N {SetN}, Множество M {SetM} ")
# if result == set():
#     print(" нет пересечений")
# else:    
#     print(f" пересечения: {result}")    

# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой
# грядке, причем кусты высажены только по окружности. Таким образом, у каждого
# куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

# bush = list(map(int, input().split()))
# max_berr = 0
# if len(bush) >= 3:
#     for i in range (len(bush)):
#         bush_sum = bush[i-2] + bush[i-1] + bush[i]
#         if bush_sum > max_berr:
#             max_berr = bush_sum
#     print(max_berr)
# else:
#     print("error")            
